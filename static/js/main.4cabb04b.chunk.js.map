{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timerId","this","window","setInterval","tick","prevProps","props","name","console","debug","clearInterval","setState","info","toUTCString","slice","className","Component","getRandomName","value","now","toString","App","hasClock","clockName","hideClock","event","preventDefault","showClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"qMAUaA,EAAb,4MACEC,MAAyB,CACvBC,MAAO,IAAIC,MAFf,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,kBAAM,EAAKC,SAAQ,OARzD,gCAWE,SAAmBC,GACbJ,KAAKK,MAAMC,OAASF,EAAUE,MAEhCC,QAAQC,MAAR,uBAA8BJ,EAAUE,KAAxC,eAAmDN,KAAKK,MAAMC,SAdpE,kCAkBE,WACEL,OAAOQ,cAAcT,KAAKD,WAnB9B,kBAsBE,WACEC,KAAKU,SAAS,CACZb,MAAO,IAAIC,OAGbS,QAAQI,KAAKX,KAAKJ,MAAMC,MAAMe,cAAcC,OAAO,IAAK,MA3B5D,oBA8BE,WACE,IAAQhB,EAAUG,KAAKJ,MAAfC,MACAS,EAASN,KAAKK,MAAdC,KAER,OACE,sBAAKQ,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGR,IAGF,YACD,sBAAMQ,UAAU,cAAhB,SACGjB,EAAMe,cAAcC,OAAO,IAAK,YA1C3C,GAA2BE,a,MCN3B,SAASC,IACP,IAAMC,EAAQnB,KAAKoB,MAAMC,WAAWN,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAQX,IAAMG,EAAb,4MACExB,MAAyB,CACvByB,UAAU,EACVC,UAAW,WAHf,EAMEvB,QAAU,EANZ,EAwBEwB,UAAY,SAACC,GACXA,EAAMC,iBACN,EAAKf,SAAS,CACZW,UAAU,KA3BhB,EA+BEK,UAAY,WACV,EAAKhB,SAAS,CACZW,UAAU,KAjChB,uDAQE,WAAqB,IAAD,OAClBrB,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKQ,SAAS,CACZY,UAAWN,QAEZ,MACHW,SAASC,iBAAiB,cAAe5B,KAAKuB,WAC9CI,SAASC,iBAAiB,QAAS5B,KAAK0B,aAf5C,kCAkBE,WACEzB,OAAOQ,cAAcT,KAAKD,SAC1B4B,SAASE,oBAAoB,cAAe7B,KAAKuB,WACjDI,SAASE,oBAAoB,QAAS7B,KAAK0B,aArB/C,oBAqCE,WACE,MAAgC1B,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKP,UAAU,MAAf,UACE,6CAECO,GACC,cAAC,EAAD,CAAOf,KAAMgB,WA7CvB,GAAyBP,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.4cabb04b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  today: Date;\n};\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    today: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => this.tick(), 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  tick() {\n    this.setState({\n      today: new Date(),\n    });\n    // eslint-disable-next-line no-console\n    console.info(this.state.today.toUTCString().slice(-12, -4));\n  }\n\n  render() {\n    const { today } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { Clock } from './components/Clock';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends Component<{}, Readonly<State>> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({\n        clockName: getRandomName(),\n      });\n    }, 3300);\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n  }\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n    this.setState({\n      hasClock: false,\n    });\n  };\n\n  showClock = () => {\n    this.setState({\n      hasClock: true,\n    });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <Clock name={clockName} />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}